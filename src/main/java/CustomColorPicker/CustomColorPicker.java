/*
 * Copyright (C) 2020 MyLibreLab
 * Based on MyOpenLab by Carmelo Salafia www.myopenlab.de
 * Copyright (C) 2004  Carmelo Salafia cswi@gmx.de
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

package CustomColorPicker;

import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Point;
import java.awt.image.BufferedImage;

import javax.swing.ButtonModel;
import javax.swing.JColorChooser;

/**
 * @author Salafia
 */
public class CustomColorPicker extends javax.swing.JDialog {

    ColorPanel myPanel;

    /**
     * Creates new form CustomColorPicker
     */
    public CustomColorPicker(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        myPanel = new ColorPanel();

        Image img = new javax.swing.ImageIcon(getClass().getResource("/CustomColorPicker/gitter.gif")).getImage();

        BufferedImage bImage = new BufferedImage(img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_RGB);
        Graphics2D g2 = bImage.createGraphics();
        g2.drawImage(img, null, null);

        myPanel.image = bImage;

        this.getContentPane().add(myPanel);

        jPanel3.setBackground(myPanel.color1);
        jPanel4.setBackground(myPanel.color2);

        myPanel.color1Transparency = jSliderColor1Trans.getValue();
        myPanel.color2Transparency = jSliderColor1Trans.getValue();
        myPanel.updateUI();

        jToggleButtonFlat.setSelected(true);
        makeSelection();
    }

    public void init() {
        myPanel.modus = modus;
        myPanel.p1 = p1;
        myPanel.p2 = p2;
        myPanel.color1 = color1;
        myPanel.color2 = color2;
        myPanel.color1Transparency = color1Transparency;
        myPanel.color2Transparency = color2Transparency;
        myPanel.wiederholung = wiederholung;

        if (modus == ColorPanel.MODE_FLAT) jToggleButtonFlat.setSelected(true);
        if (modus == ColorPanel.MODE_LINEAR) jToggleButtonLinear.setSelected(true);
        if (modus == ColorPanel.MODE_RADIAL) jToggleButtonRadial.setSelected(true);

        if (wiederholung) jCheckBoxRepeat.setSelected(true);
        jPanel3.setBackground(color1);
        jPanel4.setBackground(color2);

        jPanel3.updateUI();
        jPanel4.updateUI();

        jSliderColor1Trans.setValue(color1Transparency);
        jSliderColor2Trans.setValue(color2Transparency);
        makeSelection();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify
     * this code. The content of this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jButtonColor1 = new javax.swing.JButton();
        jButtonColor2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jSliderColor1Trans = new javax.swing.JSlider();
        jSliderColor2Trans = new javax.swing.JSlider();
        jPanel2 = new javax.swing.JPanel();
        jToggleButtonFlat = new javax.swing.JToggleButton();
        jToggleButtonLinear = new javax.swing.JToggleButton();
        jToggleButtonRadial = new javax.swing.JToggleButton();
        jCheckBoxRepeat = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        jButtonOK = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Advanced Color Picker");
        setAlwaysOnTop(true);

        jPanel1.setPreferredSize(new java.awt.Dimension(150, 100));

        jButtonColor1.setText("Color1");
        jButtonColor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonColor1ActionPerformed(evt);
            }
        });

        jButtonColor2.setText("Color2");
        jButtonColor2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonColor2ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(0, 26, Short.MAX_VALUE));
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(0, 23, Short.MAX_VALUE));

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(0, 26, Short.MAX_VALUE));
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(0, 0, Short.MAX_VALUE));

        jSliderColor1Trans.setMaximum(255);
        jSliderColor1Trans.setValue(255);
        jSliderColor1Trans.setBorder(javax.swing.BorderFactory.createTitledBorder("Color1 Transparenz"));
        jSliderColor1Trans.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderColor1TransStateChanged(evt);
            }
        });
        jSliderColor1Trans.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jSliderColor1TransPropertyChange(evt);
            }
        });

        jSliderColor2Trans.setMaximum(255);
        jSliderColor2Trans.setValue(255);
        jSliderColor2Trans.setBorder(javax.swing.BorderFactory.createTitledBorder("Color2 Transparenz"));
        jSliderColor2Trans.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderColor2TransStateChanged(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel1Layout.createSequentialGroup().addContainerGap()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                                .add(jButtonColor2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 98,
                                                        Short.MAX_VALUE)
                                                .add(jButtonColor1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 98,
                                                        Short.MAX_VALUE))
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                .add(jSliderColor1Trans, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 130,
                                        Short.MAX_VALUE)
                                .add(jSliderColor2Trans, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 130,
                                        Short.MAX_VALUE))
                        .addContainerGap()));
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel1Layout.createSequentialGroup().addContainerGap()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jButtonColor1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27,
                                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jButtonColor2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jSliderColor1Trans, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jSliderColor2Trans, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(103, Short.MAX_VALUE)));

        getContentPane().add(jPanel1, java.awt.BorderLayout.WEST);

        jPanel2.setPreferredSize(new java.awt.Dimension(0, 40));

        buttonGroup1.add(jToggleButtonFlat);
        jToggleButtonFlat.setText("Flat");
        jToggleButtonFlat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonFlatActionPerformed(evt);
            }
        });

        buttonGroup1.add(jToggleButtonLinear);
        jToggleButtonLinear.setText("Linear");
        jToggleButtonLinear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonLinearActionPerformed(evt);
            }
        });

        buttonGroup1.add(jToggleButtonRadial);
        jToggleButtonRadial.setText("Radial");
        jToggleButtonRadial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonRadialActionPerformed(evt);
            }
        });

        jCheckBoxRepeat.setText("Repeat");
        jCheckBoxRepeat.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBoxRepeat.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBoxRepeat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxRepeatActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel2Layout.createSequentialGroup().addContainerGap().add(jToggleButtonFlat)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(jToggleButtonLinear)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(jToggleButtonRadial)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(jCheckBoxRepeat)
                        .addContainerGap(277, Short.MAX_VALUE)));
        jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel2Layout.createSequentialGroup().addContainerGap()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jToggleButtonLinear).add(jToggleButtonRadial).add(jCheckBoxRepeat)
                                .add(jToggleButtonFlat))
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel5.setPreferredSize(new java.awt.Dimension(100, 40));

        jButtonOK.setText("OK");
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(
                org.jdesktop.layout.GroupLayout.TRAILING,
                jPanel5Layout.createSequentialGroup().addContainerGap(403, Short.MAX_VALUE).add(jButtonOK)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(jButtonCancel)
                        .addContainerGap()));
        jPanel5Layout
                .setVerticalGroup(
                        jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel5Layout.createSequentialGroup()
                                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                                .add(jButtonCancel).add(jButtonOK))
                                        .addContainerGap()));

        getContentPane().add(jPanel5, java.awt.BorderLayout.SOUTH);

        jPanel6.setPreferredSize(new java.awt.Dimension(10, 100));

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
                jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(0, 10, Short.MAX_VALUE));
        jPanel6Layout.setVerticalGroup(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(0,
                280, Short.MAX_VALUE));

        getContentPane().add(jPanel6, java.awt.BorderLayout.EAST);

        setSize(new java.awt.Dimension(547, 399));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_jButtonCancelActionPerformed
    {// GEN-HEADEREND:event_jButtonCancelActionPerformed
        result = false;

        dispose();
    }// GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_jButtonOKActionPerformed
    {// GEN-HEADEREND:event_jButtonOKActionPerformed
        result = true;

        color1 = myPanel.color1;
        color2 = myPanel.color2;

        color1Transparency = myPanel.color1Transparency;
        color2Transparency = myPanel.color2Transparency;

        modus = myPanel.modus;

        p1 = myPanel.p1;
        p2 = myPanel.p2;
        wiederholung = myPanel.wiederholung;

        dispose();
    }// GEN-LAST:event_jButtonOKActionPerformed

    private void jCheckBoxRepeatActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_jCheckBoxRepeatActionPerformed
    {// GEN-HEADEREND:event_jCheckBoxRepeatActionPerformed
        myPanel.wiederholung = jCheckBoxRepeat.isSelected();
        myPanel.updateUI();
    }// GEN-LAST:event_jCheckBoxRepeatActionPerformed

    private void makeSelection() {
        ButtonModel model = buttonGroup1.getSelection();
        if (jToggleButtonFlat.isSelected()) {
            myPanel.modus = ColorPanel.MODE_FLAT;
            myPanel.updateUI();
            jCheckBoxRepeat.setVisible(false);

            jButtonColor2.setEnabled(false);
            jSliderColor2Trans.setEnabled(false);
        }
        if (jToggleButtonLinear.isSelected()) {
            myPanel.modus = ColorPanel.MODE_LINEAR;
            jCheckBoxRepeat.setVisible(true);
            myPanel.updateUI();

            jButtonColor2.setEnabled(true);
            jSliderColor2Trans.setEnabled(true);
        }
        if (jToggleButtonRadial.isSelected()) {
            myPanel.modus = ColorPanel.MODE_RADIAL;
            jCheckBoxRepeat.setVisible(false);
            myPanel.updateUI();

            jButtonColor2.setEnabled(true);
            jSliderColor2Trans.setEnabled(true);
        }
    }

    private void jToggleButtonRadialActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_jToggleButtonRadialActionPerformed
    {// GEN-HEADEREND:event_jToggleButtonRadialActionPerformed
        makeSelection();
    }// GEN-LAST:event_jToggleButtonRadialActionPerformed

    private void jToggleButtonLinearActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_jToggleButtonLinearActionPerformed
    {// GEN-HEADEREND:event_jToggleButtonLinearActionPerformed

        makeSelection();
    }// GEN-LAST:event_jToggleButtonLinearActionPerformed

    private void jToggleButtonFlatActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_jToggleButtonFlatActionPerformed
    {// GEN-HEADEREND:event_jToggleButtonFlatActionPerformed
        makeSelection();
    }// GEN-LAST:event_jToggleButtonFlatActionPerformed

    private void jSliderColor2TransStateChanged(javax.swing.event.ChangeEvent evt)// GEN-FIRST:event_jSliderColor2TransStateChanged
    {// GEN-HEADEREND:event_jSliderColor2TransStateChanged
        myPanel.color2Transparency = jSliderColor2Trans.getValue();
        myPanel.updateUI();
    }// GEN-LAST:event_jSliderColor2TransStateChanged

    private void jSliderColor1TransStateChanged(javax.swing.event.ChangeEvent evt)// GEN-FIRST:event_jSliderColor1TransStateChanged
    {// GEN-HEADEREND:event_jSliderColor1TransStateChanged
        myPanel.color1Transparency = jSliderColor1Trans.getValue();
        myPanel.updateUI();
    }// GEN-LAST:event_jSliderColor1TransStateChanged

    private void jSliderColor1TransPropertyChange(java.beans.PropertyChangeEvent evt)// GEN-FIRST:event_jSliderColor1TransPropertyChange
    {// GEN-HEADEREND:event_jSliderColor1TransPropertyChange

    }// GEN-LAST:event_jSliderColor1TransPropertyChange

    private void jButtonColor2ActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_jButtonColor2ActionPerformed
    {// GEN-HEADEREND:event_jButtonColor2ActionPerformed
        Color c = JColorChooser.showDialog(this, "Color", myPanel.color2);
        if (c != null) {
            myPanel.color2 = c;
            jPanel4.setBackground(c);
            myPanel.updateUI();
        }
    }// GEN-LAST:event_jButtonColor2ActionPerformed

    private void jButtonColor1ActionPerformed(java.awt.event.ActionEvent evt)// GEN-FIRST:event_jButtonColor1ActionPerformed
    {// GEN-HEADEREND:event_jButtonColor1ActionPerformed
        Color c = JColorChooser.showDialog(this, "Color", myPanel.color1);
        if (c != null) {
            myPanel.color1 = c;
            jPanel3.setBackground(c);
            myPanel.updateUI();

            // Panel darf nicht transparent sein
            // panel.setOpaque(true);
            // panel.setBackground(c);
        }
    }// GEN-LAST:event_jButtonColor1ActionPerformed

    public static int modus = 0;

    public static Point p1 = new Point(100, 100);
    public static Point p2 = new Point(200, 200);

    public static Color color1 = new Color(255, 255, 255);
    public static Color color2 = new Color(0, 0, 0);

    public static int color1Transparency = 255;
    public static int color2Transparency = 255;

    public static boolean wiederholung = false;

    public static boolean result = false;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonColor1;
    private javax.swing.JButton jButtonColor2;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JCheckBox jCheckBoxRepeat;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JSlider jSliderColor1Trans;
    private javax.swing.JSlider jSliderColor2Trans;
    private javax.swing.JToggleButton jToggleButtonFlat;
    private javax.swing.JToggleButton jToggleButtonLinear;
    private javax.swing.JToggleButton jToggleButtonRadial;
    // End of variables declaration//GEN-END:variables
}
